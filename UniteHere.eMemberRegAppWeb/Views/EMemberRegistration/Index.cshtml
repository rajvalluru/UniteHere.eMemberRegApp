@model IEnumerable<UniteHere.eMemberRegAppWeb.Models.EMemberRegistrationViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>New Member Registrations</h2>  Total Count: @Model.Count()

<p>
    @Html.ActionLink("View History", "History")
</p>
<table class="table">
    <tr>
        <th>
            @Html.Label("New Member")
        </th>
        <th>
            @Html.Label("Name")
        </th>
       <th>
            @Html.DisplayNameFor(model => model.Mobile_Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Employer_Union_Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Position)
        </th>
        <th>
            @*@Html.Label("Deduction")<br />@Html.Label("Opt Out")*@
            @Html.Label("Checkoff")
        </th>
        <th>
            @Html.Label("SMS")
        </th>
        <th>
            @Html.Label("TIP")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date_Of_Hire)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ssn)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.LocalNumber)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.Member_Union_Id)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th>
            @Html.Label("Dues")<br />@Html.Label("Card")
        </th>
        @*<th></th>*@
    </tr>

@foreach (var item in Model) {
    <tr>
         @{ if (item.IsNewMember) {
                <td>
                    <span style="background-color:red"> @Html.DisplayFor(modelItem => item.IsNewMember) </span></td>
              } else {
                <td> @Html.DisplayFor(modelItem => item.IsNewMember) </td>
                  }
              }

        <td>
            @*@Html.DisplayFor(modelItem => item.First_Name) @Html.DisplayFor(modelItem => item.Middle_Name) @Html.DisplayFor(modelItem => item.Last_Name)*@
            @Html.ActionLink(item.First_Name +" "+ (string.IsNullOrEmpty(item.Middle_Name) ? "" : item.Middle_Name + " ") + item.Last_Name, "Edit", new { id = item.Id })
            
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Mobile_Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Employer_Union_Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Position)
        </td>
        <td>
           @{
                 bool checkoff = !item.Deduction_Opt_Out_Flag;
                @Html.DisplayFor(modelItem => checkoff) 
        }
         </td>
        <td>
            @Html.DisplayFor(modelItem => item.Sms_Opt_In_Flag)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Tip_Contribution)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date_Of_Hire)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ssn).ToString().Substring(7, 4)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.LocalNumber)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.Member_Union_Id)
        </td>*@
        <td>
            @{
              var registeredOn = item.CreatedOn.ToString("G");
            <p>@registeredOn</p>
            }
        </td>
        <td>
            @*@{
                    var pdfUrl = "/DuesCardFiles/" + HttpUtility.UrlPathEncode(item.Dues_Card_File_Name);
                    <a href=@pdfUrl>pdf</a>
            }*@
            @Html.ActionLink("pdf", "DisplayDuesCardPdf", new { fileName = item.Dues_Card_File_Name })
        </td>
        @*<td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
    @Html.ActionLink("Details", "Details", new { id=item.Id }) |
    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>*@
    </tr>
}

</table>
